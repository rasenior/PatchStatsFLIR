% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/plot_patches.R
\name{plot_patches}
\alias{plot_patches}
\title{plot_patches}
\usage{
plot_patches(df, patches, facet = FALSE, plot_distribution = TRUE,
  print_plot = TRUE, save_plot = FALSE, return_plot = FALSE,
  out_dir = NULL, file_name = NULL, file_ext = "png", lab_size = 8,
  text_size = 6, fig_width = 8, fig_height = 9, fig_units = "cm",
  val_pal = c("black", "#050155", "#120172", "#3b008e", "#7200a9", "#8f00a0",
  "#ba187f", "#d9365b", "#ed5930", "#f76323", "#fa8600", "#f6a704", "#fad61e",
  "#fad61e"), patch_cols = c("mistyrose", "cornflowerblue"),
  patch_labs = c("Hot spots", "Cold spots"), val_lab = NULL)
}
\arguments{
\item{df}{A dataframe returned from \code{\link{get_patches}}.}

\item{patches}{A SpatialPolygonsDataFrame returned from \code{\link{get_patches}}.}

\item{facet}{Whether to plot facets by matrix_id. Defaults to FALSE.}

\item{plot_distribution}{Should a histogram be plotted? Defaults to TRUE.}

\item{print_plot}{Should the resulting plots be printed? Defaults to FALSE.}

\item{save_plot}{Should the resulting plots be saved? Defaults to TRUE.}

\item{return_plot}{Should the resulting plots be returned? Defaults to FALSE.}

\item{out_dir}{Path to directory where plots should be saved (if applicable).}

\item{file_name}{Prefix for plot filenames (if applicable). If none
specified, uses generic names 'distribution' and 'patches'.}

\item{file_ext}{File extension. Defaults to '.png'.}

\item{lab_size}{Size of axes labels. Defaults to 8.}

\item{text_size}{Size of axes text and legend text. Defaults to 6.}

\item{fig_width}{Figure width (if saved). Defaults to 8.}

\item{fig_height}{Figure height (if saved). Defaults to 9.}

\item{fig_units}{Figure dimension units (if saved). Defaults to "cm".}

\item{val_pal}{Colour palette to use for raster. Defaults to palette
derived from a FLIR jpeg: \code{c("black", "#050155", "#120172", "#3b008e",
"#7200a9", "#8f00a0","#ba187f", "#d9365b", "#ed5930","#f76323", "#fa8600",
"#f6a704","#fad61e", "#fad61e")}.}

\item{patch_cols}{Colours for the patch borders (hot spot colour followed by
cold spot colour). Defaults to: \code{c("mistyrose", "cornflowerblue")}.}

\item{patch_labs}{Labels to use in patch outline legend. Defaults to 'Hot
spots' and 'Cold spots'.}

\item{val_lab}{Label to describe the variable of interest - corresponds to
the x axis of the histogram, and the fill legend of the raster plot.}
}
\description{
Plot hot and cold patches returned from \code{\link{get_patches}}.
}
\examples{
# FLIR temperature matrix ---------------------------------------------------
# Find hot and cold patches
flir_results <-
    get_patches(val_mat = flir11835$flir_matrix,
    matrix_id = flir11835$photo_no)

# Look at the results for individual pixels
head(flir_results$df)

# Look at the patch statistics for hot and cold patches
flir_results$pstats

# Plot the patches
sp::plot(flir_results$patches)

# Plot using ThermStats::plot_patches
plot_patches(df = flir_results$df,
             patches = flir_results$patches,
             print_plot = TRUE,
             save_plot = FALSE)

# Worldclim2 temperature raster ---------------------------------------
# Dataset 'worldclim_sulawesi' represents mean January temperature for the
# island of Sulawesi

# Define projection and extent
mat_proj <- raster::projection(worldclim_sulawesi)
mat_extent <- raster::extent(worldclim_sulawesi)

# Find hot and cold patches
worldclim_results <-
 get_patches(val_mat = worldclim_sulawesi,
             matrix_id = "sulawesi",
             k = 8,
             style = "W",
             mat_proj = mat_proj,
             mat_extent = mat_extent)

# Look at the results for individual pixels
head(worldclim_results$df)

# Look at the patch statistics for hot and cold patches
worldclim_results$pstats

# Plot the patches
sp::plot(worldclim_results$patches)

# Plot using ThermStats::plot_patches
plot_patches(df = worldclim_results$df,
             patches = worldclim_results$patches,
             print_plot = TRUE,
             save_plot = FALSE)

}
