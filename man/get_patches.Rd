% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/get_patches.R
\name{get_patches}
\alias{get_patches}
\title{get_patches}
\usage{
get_patches(val_mat, matrix_id = NULL, k = 8, style = "W",
  mat_proj = NULL, mat_extent = NULL, return_vals = c("df",
  "patches", "pstats"))
}
\arguments{
\item{val_mat}{A numeric matrix, such as that returned from
\code{Thermimage::}\code{\link[Thermimage]{raw2temp}}.}

\item{matrix_id}{The matrix ID (optional). Useful when iterating over
numerous matrices.}

\item{k}{Number of neighbours to use when calculating nearest neighbours
using \code{spdep::}\code{\link[spdep]{knearneigh}}.}

\item{style}{Style to use when calculating neighbourhood weights using
\code{spdep::}\code{\link[spdep]{nb2listw}}.}

\item{mat_proj}{Spatial projection. Optional, but necessary for geographic
data to plot correctly.}

\item{mat_extent}{Spatial extent. Optional, but necessary for geographic
data to plot correctly.}

\item{return_vals}{Which values to return? Any combination of the dataframe
(\code{df}), SpatialPolygonsDataFrame of hot and cold patches
(\code{patches}) and patch statistics dataframe (\code{pstats}).}
}
\value{
A list containing:
 \item{df}{A dataframe with one row for each pixel, and variables denoting:
 the pixel value (val); the original spatial location of the pixel (x and y);
 its patch classification (G_bin) into a hot (1), cold (-1) or no patch (0)
 according to the Z value (see \code{spdep::}\code{\link[spdep]{localG}});
 the unique ID of the patch in which the pixel fell;
 and the matrix ID (if applicable).}
 \item{patches}{A SpatialPolygonsDataFrame of hot and cold patches. Hot
 patches have a value of 1, and cold patches a value of -1.}
 \item{pstats}{A dataframe with patch statistics for hot patches and cold
 patches, respectively. See \code{\link{patch_stats}} for details of all the
 statistics returned.}
}
\description{
Find hot and cold patches in a numeric matrix and calculate patch statistics.
}
\examples{

# FLIR temperature matrix ---------------------------------------------------
# Find hot and cold patches
flir_results <-
    get_patches(val_mat = flir11835$flir_matrix,
    matrix_id = flir11835$photo_no)

# Look at the results for individual pixels
head(flir_results$df)

# Look at the patch statistics for hot and cold patches
flir_results$pstats

# Plot the patches
sp::plot(flir_results$patches)

# Plot using ThermStats::plot_patches
plot_patches(df = flir_results$df,
             patches = flir_results$patches,
             print_plot = TRUE,
             save_plot = FALSE)

# Worldclim2 temperature raster ---------------------------------------
# Dataset 'sulawesi_temp' represents mean January temperature for the
# island of Sulawesi

# Define projection and extent
mat_proj <- projection(sulawesi_temp)
mat_extent <- extent(sulawesi_temp)

# Find hot and cold patches
worldclim_results <-
 get_patches(val_mat = sulawesi_temp,
             matrix_id = "sulawesi",
             k = 8,
             style = "W",
             mat_proj = mat_proj,
             mat_extent = mat_extent)

# Look at the results for individual pixels
head(worldclim_results$df)

# Look at the patch statistics for hot and cold patches
worldclim_results$pstats

# Plot the patches
sp::plot(worldclim_results$patches)

# Plot using ThermStats::plot_patches
plot_patches(df = worldclim_results$df,
             patches = worldclim_results$patches,
             print_plot = TRUE,
             save_plot = FALSE)

}
